name: Lint and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: warning
          check_together: 'yes'
          format: gcc
      
      - name: Check executable permissions
        run: |
          # Check that all .sh files are executable
          failed=0
          for file in $(find . -name "*.sh" -type f); do
            if [[ ! -x "$file" ]]; then
              echo "::error file=$file::Script is not executable"
              failed=1
            fi
          done
          exit $failed

  shfmt:
    name: Shell Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run shfmt
        uses: mvdan/sh@v3
        with:
          cmd: shfmt -d -i 4 -ci .

  makefile-lint:
    name: Makefile Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Validate Makefile
        run: |
          # Check Makefile syntax
          make -n help
          make -n check
          
          # Check for common Makefile issues
          if grep -q "^ " Makefile; then
            echo "::warning::Makefile contains spaces instead of tabs"
          fi
          
          # Check all targets are documented
          undocumented=$(grep -E '^[a-zA-Z_-]+:' Makefile | grep -v '##' | grep -v '.PHONY' | grep -v '^help:' || true)
          if [ ! -z "$undocumented" ]; then
            echo "::warning::Undocumented targets found: $undocumented"
          fi

  yaml-lint:
    name: YAML Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Validate YAML
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .github/workflows/
          config_data: |
            extends: default
            rules:
              line-length:
                max: 120
                level: warning
              truthy:
                allowed-values: ['true', 'false', 'on']

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v14
        with:
          globs: '**/*.md'
          config: |
            {
              "default": true,
              "MD013": false,
              "MD033": false,
              "MD041": false
            }

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy security scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'